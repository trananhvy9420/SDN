<!DOCTYPE html>
<html lang="vi">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Xác thực người dùng</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body class="bg-gray-100 flex items-center justify-center min-h-screen p-4">
    <a
      href="/"
      class="absolute top-4 left-4 bg-white text-gray-800 py-2 px-4 rounded-lg shadow-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-300"
    >
      &larr; Quay về trang chủ
    </a>
    <div class="bg-white p-8 rounded-lg shadow-lg max-w-sm w-full">
      <div id="login-section" class="hidden">
        <div class="flex justify-center mb-6">
          <span class="inline-block bg-gray-200 rounded-full p-3"
            ><svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
            >
              <path
                fill="currentColor"
                d="M12 4a4 4 0 1 1 0 8a4 4 0 0 1 0-8M6.5 14a5.5 5.5 0 0 0-4.86 8.16L1.5 22.5l.16-.14A5.5 5.5 0 0 0 6.5 14m11 0a5.5 5.5 0 0 0-4.86 8.16l-.14.14l.16.14a5.5 5.5 0 0 0 4.84-8.3z"
              />
            </svg>
            ></span
          >
        </div>
        <h2 class="text-2xl font-semibold text-center mb-4">
          Đăng nhập tài khoản
        </h2>
        <p class="text-gray-600 text-center mb-6">
          Chào mừng trở lại! Vui lòng nhập thông tin của bạn.
        </p>
        <form id="login-form" novalidate>
          <div class="mb-4">
            <label
              for="login-membername"
              class="block text-gray-700 text-sm font-bold mb-2"
              >Tên thành viên</label
            >
            <input
              type="text"
              id="login-membername"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors"
              placeholder="Nhập tên thành viên"
              required
            />
            <p
              id="login-membername-error"
              class="text-red-500 text-xs mt-1 h-4"
            ></p>
          </div>
          <div class="mb-4">
            <label
              for="login-password"
              class="block text-gray-700 text-sm font-bold mb-2"
              >Mật khẩu</label
            >
            <input
              type="password"
              id="login-password"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors"
              placeholder="********"
              required
            />
            <p
              id="login-password-error"
              class="text-red-500 text-xs mt-1 h-4"
            ></p>
          </div>
          <div
            id="login-form-error"
            class="text-red-500 text-sm mb-4 text-center h-5"
          ></div>
          <button
            type="submit"
            class="w-full bg-blue-500 text-white py-2 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-300"
          >
            Đăng Nhập
          </button>
        </form>

        <div class="relative flex py-5 items-center">
          <div class="flex-grow border-t border-gray-300"></div>
          <span class="flex-shrink mx-4 text-gray-500 text-sm">HOẶC</span>
          <div class="flex-grow border-t border-gray-300"></div>
        </div>

        <a
          href="/api/auth/google"
          class="w-full flex items-center justify-center bg-white text-gray-700 font-medium py-2 border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-300"
        >
          <img
            src="https://upload.wikimedia.org/wikipedia/commons/c/c1/Google_%22G%22_logo.svg"
            alt="Google logo"
            class="w-5 h-5 mr-3"
          />
          Đăng nhập với Google
        </a>
        <p class="text-center text-sm text-gray-600 mt-4">
          Chưa có tài khoản?
          <button
            id="show-register-btn"
            class="font-medium text-blue-600 hover:text-blue-500"
          >
            Đăng ký ngay
          </button>
        </p>
      </div>

      <div id="register-section" class="hidden">
        <div class="flex justify-center mb-6">
          <span class="inline-block bg-gray-200 rounded-full p-3"
            ><svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
            >
              <path
                fill="currentColor"
                d="M12 4a4 4 0 0 1 4 4a4 4 0 0 1-4 4a4 4 0 0 1-4-4a4 4 0 0 1 4-4m0 10c4.42 0 8 1.79 8 4v2H4v-2c0-2.21 3.58-4 8-4"
              />
            </svg>
            ></span
          >
        </div>
        <h2 class="text-2xl font-semibold text-center mb-4">
          Tạo tài khoản mới
        </h2>
        <p class="text-gray-600 text-center mb-6">
          Điền thông tin của bạn để bắt đầu.
        </p>
        <form id="register-form" novalidate>
          <div class="mb-4">
            <label
              for="register-membername"
              class="block text-gray-700 text-sm font-bold mb-2"
              >Tên thành viên</label
            >
            <input
              type="text"
              id="register-membername"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors"
              placeholder="VD: user123"
              required
            />
            <p
              id="register-membername-error"
              class="text-red-500 text-xs mt-1 h-4"
            ></p>
          </div>
          <div class="mb-4">
            <label
              for="register-email"
              class="block text-gray-700 text-sm font-bold mb-2"
              >Email</label
            >
            <input
              type="email"
              id="register-email"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors"
              placeholder="VD: nguyenvana@gmail.com"
              required
            />
            <p
              id="register-name-error"
              class="text-red-500 text-xs mt-1 h-4"
            ></p>
          </div>
          <div class="mb-4">
            <label
              for="register-name"
              class="block text-gray-700 text-sm font-bold mb-2"
              >Họ và tên</label
            >
            <input
              type="text"
              id="register-name"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors"
              placeholder="VD: Nguyễn Văn A"
              required
            />
            <p
              id="register-name-error"
              class="text-red-500 text-xs mt-1 h-4"
            ></p>
          </div>
          <div class="mb-4">
            <label
              for="register-yob"
              class="block text-gray-700 text-sm font-bold mb-2"
              >Ngày sinh</label
            >
            <input
              type="date"
              id="register-yob"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors"
              required
            />
            <p
              id="register-yob-error"
              class="text-red-500 text-xs mt-1 h-4"
            ></p>
          </div>
          <div class="mb-4">
            <label
              for="register-password"
              class="block text-gray-700 text-sm font-bold mb-2"
              >Mật khẩu</label
            >
            <input
              type="password"
              id="register-password"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors"
              placeholder="********"
              required
            />
            <p
              id="register-password-error"
              class="text-red-500 text-xs mt-1 h-4"
            ></p>
          </div>
          <div
            id="register-form-error"
            class="text-red-500 text-sm mb-4 text-center h-5"
          ></div>
          <button
            type="submit"
            class="w-full bg-green-500 text-white py-2 rounded-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors duration-300"
          >
            Đăng Ký
          </button>
        </form>
        <p class="text-center text-sm text-gray-600 mt-4">
          Đã có tài khoản?
          <button
            id="show-login-btn"
            class="font-medium text-blue-600 hover:text-blue-500"
          >
            Đăng nhập ngay
          </button>
        </p>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        // --- BẮT ĐẦU: ĐOẠN CODE MỚI ĐỂ XỬ LÝ TOKEN TỪ GOOGLE LOGIN ---
        const urlParamsOnLoad = new URLSearchParams(window.location.search);
        const accessTokenFromUrl = urlParamsOnLoad.get("access_token");
        const refreshTokenFromUrl = urlParamsOnLoad.get("refresh_token");
        const isAdminFromUrl = urlParamsOnLoad.get("isAdmin") === "true";

        // Nếu URL có chứa access_token (nghĩa là vừa login bằng Google xong)
        if (accessTokenFromUrl && refreshTokenFromUrl) {
          // 1. Lưu token vào localStorage
          localStorage.setItem("access_token", accessTokenFromUrl);
          localStorage.setItem("refresh_token", refreshTokenFromUrl);
          localStorage.setItem("isAdmin", isAdminFromUrl);

          // 2. Xóa các tham số token khỏi URL để bảo mật và làm sạch
          const cleanUrl =
            window.location.protocol +
            "//" +
            window.location.host +
            window.location.pathname;
          window.history.replaceState({}, document.title, cleanUrl);

          // 3. Chuyển hướng đến trang phù hợp
          if (isAdminFromUrl) {
            window.location.replace("/admin");
          } else {
            window.location.replace("/user");
          }
        }
        // --- KẾT THÚC: ĐOẠN CODE MỚI ---

        // --- PHẦN 1: CÁC BIẾN VÀ HÀM TIỆN ÍCH ---
        const loginSection = document.getElementById("login-section");
        const registerSection = document.getElementById("register-section");
        const loginForm = document.getElementById("login-form");
        const registerForm = document.getElementById("register-form");
        const showRegisterBtn = document.getElementById("show-register-btn");
        const showLoginBtn = document.getElementById("show-login-btn");

        const clearErrors = (formType) => {
          const fields =
            formType === "login"
              ? ["membername", "password"]
              : ["membername", "name", "yob", "password"];
          fields.forEach((field) => {
            const inputEl = document.getElementById(`${formType}-${field}`);
            const errorEl = document.getElementById(
              `${formType}-${field}-error`
            );
            if (inputEl)
              inputEl.classList.remove("border-red-500", "focus:ring-red-500");
            if (errorEl) errorEl.textContent = "";
          });
          const formErrorEl = document.getElementById(`${formType}-form-error`);
          if (formErrorEl) formErrorEl.textContent = "";
        };

        // --- PHẦN 2: HIỂN THỊ FORM DỰA TRÊN URL KHI TẢI TRANG ---
        const urlParams = new URLSearchParams(window.location.search);
        const formToShow = urlParams.get("form");
        if (formToShow === "register") {
          registerSection.classList.remove("hidden");
        } else {
          loginSection.classList.remove("hidden");
        }

        // --- PHẦN 3: CÁC EVENT LISTENER ---

        // Chuyển đổi giữa các form bằng nút bấm
        showRegisterBtn.addEventListener("click", () => {
          clearErrors("login");
          loginSection.classList.add("hidden");
          registerSection.classList.remove("hidden");
        });

        showLoginBtn.addEventListener("click", () => {
          clearErrors("register");
          registerSection.classList.add("hidden");
          loginSection.classList.remove("hidden");
        });

        // Xử lý submit form đăng nhập
        loginForm.addEventListener("submit", async (event) => {
          event.preventDefault();
          clearErrors("login");
          const membername = document.getElementById("login-membername").value;
          const password = document.getElementById("login-password").value;
          const formErrorDiv = document.getElementById("login-form-error");

          try {
            const response = await axios.post("/api/auth", {
              membername,
              password,
            });
            localStorage.setItem("access_token", response.data.access_token);
            localStorage.setItem("refresh_token", response.data.refresh_token);
            localStorage.setItem("isAdmin", response.data.member.isAdmin);
            if (response.data.member && response.data.member.isAdmin === true) {
              window.location.href = "/admin";
            } else {
              window.location.href = "/user";
            }
          } catch (error) {
            console.error("Lỗi đăng nhập:", error.response);
            if (
              error.response &&
              error.response.data &&
              error.response.data.message
            ) {
              formErrorDiv.textContent = error.response.data.message;
            } else {
              formErrorDiv.textContent =
                "Tên thành viên hoặc mật khẩu không đúng.";
            }
          }
        });

        // Xử lý submit form đăng ký
        registerForm.addEventListener("submit", async (event) => {
          event.preventDefault();
          clearErrors("register");
          const membername = document.getElementById(
            "register-membername"
          ).value;
          const name = document.getElementById("register-name").value;
          const YOB = document.getElementById("register-yob").value;
          const email = document.getElementById("register-email").value;
          const password = document.getElementById("register-password").value;
          const formErrorDiv = document.getElementById("register-form-error");

          try {
            await axios.post("/api/auth/register", {
              membername,
              name,
              email,
              password,
              YOB,
            });
            const loginResponse = await axios.post("/api/auth", {
              membername,
              password,
            });
            localStorage.setItem(
              "access_token",
              loginResponse.data.access_token
            );
            localStorage.setItem(
              "refresh_token",
              loginResponse.data.refresh_token
            );
            window.location.replace("/user");
          } catch (error) {
            console.error("Chi tiết lỗi API:", error.response);
            if (error.response && error.response.data) {
              const apiErrors = error.response.data.errors;
              if (apiErrors && Array.isArray(apiErrors)) {
                apiErrors.forEach((errorObject) => {
                  const fieldName = Object.keys(errorObject)[0];
                  if (!fieldName) return;
                  const errorMessage = errorObject[fieldName];
                  const errorElement = document.getElementById(
                    `register-${fieldName}-error`
                  );
                  const inputElement = document.getElementById(
                    `register-${fieldName}`
                  );
                  if (errorElement) errorElement.textContent = errorMessage;
                  if (inputElement)
                    inputElement.classList.add(
                      "border-red-500",
                      "focus:ring-red-500"
                    );
                });
              } else if (error.response.data.message) {
                formErrorDiv.textContent = error.response.data.message;
              } else {
                formErrorDiv.textContent = "Đã có lỗi không xác định xảy ra.";
              }
            } else {
              formErrorDiv.textContent =
                "Không thể kết nối đến máy chủ. Vui lòng thử lại.";
            }
          }
        });
      });
    </script>
  </body>
</html>
